
name = "libnstd"

configurations = { "Debug", "Release" }

Debug = "$(if $(patsubst Debug%,,$(configuration)),,true)"
Unicode = "$(if $(patsubst %_Unicode,,$(configuration)),,true)"

if(tool == "vcxproj") {
  configurations += { "Debug_Unicode", "Release_Unicode", "Debug_cygwin", "Release_cygwin" }
  platforms = { "Win32", "x64" }
  Win32 = "true"
  cppFlags += { "/MT", "$(if $(Debug),/Od" }
  defines += { "_WIN32", "_CRT_SECURE_NO_WARNINGS" }
  if(platform == "x64") {
    defines += "_WIN64"
  }
}
else {
  cppFlags += { "-std=gnu++0x" }
}

defines += "$(if $(Win32),_WIN32) $(if $(Debug),,NDEBUG) $(if $(Unicode),_UNICODE)"

tests = "UnitTest Performance Console"

targets = {
  all = {
    dependencies = { "libnstd", "$(tests)" }
  }
  "$(tests)" = cppApplication + {
    folder = "Tests"
    dependencies = { "libnstd" }
    includePaths = { "$(mareDir)/include" }
    if(platform == "Win32" && tool != "vcxproj") {
      buildDir = "build/$(configuration)_cygwin/$(target)"
    } else {
      buildDir = "build/$(configuration)/$(target)"
    }
    root = "$(mareDir)/test/$(target)"
    libPaths = { "$(dir $(buildDir))/libnstd" }
    libs = { "nstd" }
    if(tool != "vcxproj") {
      libs +=  { "pthread", "rt" }
    }
    if(tool == "vcxproj") {
      linkFlags += { "/SUBSYSTEM:CONSOLE" }
    }
    files = {
      "$(mareDir)/test/$(target)/**.cpp" = cppSource,
    }
    if (tool == "vcxproj" && "$(patsubst %_cygwin,cygwin,$(configuration))" == "cygwin") {
      defines -= { "_CRT_SECURE_NO_WARNINGS", "_WIN64" }
      configuration = "$(patsubst %_cygwin,%,$(configuration))"
      buildDir = "build/$(configuration)_cygwin/$(target)"
      buildCommand = "bash -c \"LANG=en_US ./mare --ignore-dependencies $(target) config=$(configuration) 2>&1 | sed -u -e \\\"s=:\\([0-9][0-9]*\\):\\([0-9][0-9]*\\)[:,]=(\\1,\\2) :=\\\" -e \\\"s=:\\([0-9][0-9]*\\)[:,]=(\\1) :=\\\" -e \\\"s=/=\\\\\\\\\\\\=g\\\" 1>&2\""
      cleanCommand = "bash -c \"LANG=en_US ./mare --ignore-dependencies clean $(target) config=$(configuration) 2>&1 | sed -u -e \\\"s=:\\([0-9][0-9]*\\):\\([0-9][0-9]*\\)[:,]=(\\1,\\2) :=\\\" -e \\\"s=:\\([0-9][0-9]*\\)[:,]=(\\1) :=\\\" -e \\\"s=/=\\\\\\\\\\\\=g\\\" 1>&2\""
      reBuildCommand = "bash -c \"LANG=en_US ./mare --ignore-dependencies rebuild $(target) config=$(configuration) 2>&1 | sed -u -e \\\"s=:\\([0-9][0-9]*\\):\\([0-9][0-9]*\\)[:,]=(\\1,\\2) :=\\\" -e \\\"s=:\\([0-9][0-9]*\\)[:,]=(\\1) :=\\\" -e \\\"s=/=\\\\\\\\\\\\=g\\\" 1>&2\""
    }
  }

  include "libnstd.mare"
  libnstd += {
    if(platform == "Win32" && tool != "vcxproj") {
      buildDir = "build/$(configuration)_cygwin/$(target)"
    } else {
      buildDir = "build/$(configuration)/$(target)"
    }
    if (tool == "vcxproj" && "$(patsubst %_cygwin,cygwin,$(configuration))" == "cygwin") {
      defines -= { "_CRT_SECURE_NO_WARNINGS", "_WIN64" }
      configuration = "$(patsubst %_cygwin,%,$(configuration))"
      buildDir = "build/$(configuration)_cygwin/$(target)"
      buildCommand = "bash -c \"LANG=en_US ./mare --ignore-dependencies $(target) config=$(configuration) 2>&1 | sed -u -e \\\"s=:\\([0-9][0-9]*\\):\\([0-9][0-9]*\\)[:,]=(\\1,\\2) :=\\\" -e \\\"s=:\\([0-9][0-9]*\\)[:,]=(\\1) :=\\\" -e \\\"s=/=\\\\\\\\\\\\=g\\\" 1>&2\""
      cleanCommand = "bash -c \"LANG=en_US ./mare --ignore-dependencies clean $(target) config=$(configuration) 2>&1 | sed -u -e \\\"s=:\\([0-9][0-9]*\\):\\([0-9][0-9]*\\)[:,]=(\\1,\\2) :=\\\" -e \\\"s=:\\([0-9][0-9]*\\)[:,]=(\\1) :=\\\" -e \\\"s=/=\\\\\\\\\\\\=g\\\" 1>&2\""
      reBuildCommand = "bash -c \"LANG=en_US ./mare --ignore-dependencies rebuild $(target) config=$(configuration) 2>&1 | sed -u -e \\\"s=:\\([0-9][0-9]*\\):\\([0-9][0-9]*\\)[:,]=(\\1,\\2) :=\\\" -e \\\"s=:\\([0-9][0-9]*\\)[:,]=(\\1) :=\\\" -e \\\"s=/=\\\\\\\\\\\\=g\\\" 1>&2\""
    }
  }
}
